# ============================================================================
# Prometheus Agent - Cluster-02 Edge Configuration
# ============================================================================
# Remote Write 전용 Prometheus Agent 구성 (쿼리 기능 없음, 메트릭 전송만)
# ============================================================================

# ----------------------------------------------------------------------------
# Prometheus Operator 설정
# ----------------------------------------------------------------------------
prometheusOperator:
  enabled: true

  # 리소스 최소화 (엣지 클러스터)
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# ----------------------------------------------------------------------------
# Prometheus Agent 설정
# ----------------------------------------------------------------------------
prometheus:
  enabled: true

  prometheusSpec:
    # Agent Mode 활성화 (쿼리/Alert 비활성화, Remote Write만)
    # https://prometheus.io/blog/2021/11/16/agent/
    enableFeatures:
      - agent

    # 로컬 저장소 비활성화 (Agent 모드에서는 불필요)
    retention: 2h
    retentionSize: ""

    # WAL 압축 비활성화 (Agent 모드 최적화)
    walCompression: false

    # 복제본 수 (엣지는 단일 인스턴스)
    replicas: 1

    # 리소스 제한 (엣지 클러스터 경량화)
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1000m
        memory: 2Gi

    # 로컬 스토리지 (최소한으로 설정)
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi

    # --------------------------------------------------------------------
    # Remote Write 설정 (중앙 클러스터 Thanos Receiver로 전송)
    # --------------------------------------------------------------------
    remoteWrite:
      - url: http://thanos-receiver.k8s-cluster-01.miribit.lab/api/v1/receive

        # Queue 설정 최적화
        queueConfig:
          capacity: 10000
          maxShards: 5
          minShards: 1
          maxSamplesPerSend: 5000
          batchSendDeadline: 5s
          minBackoff: 30ms
          maxBackoff: 100ms

        # Write Relabel 설정 (선택 사항)
        # externalLabels가 설정되어 있으므로 추가 relabeling 불필요
        # 필요 시 아래 설정으로 레이블 추가/수정 가능
        #
        # writeRelabelConfigs:
        #   # 불필요한 메트릭 제외
        #   - sourceLabels: [__name__]
        #     regex: 'go_.*|process_.*'
        #     action: drop
        #
        #   # 커스텀 레이블 추가
        #   - targetLabel: datacenter
        #     replacement: edge-dc-01

    # --------------------------------------------------------------------
    # External Labels (모든 메트릭에 자동 추가)
    # --------------------------------------------------------------------
    # 주의: externalLabels는 모든 메트릭에 자동으로 추가됩니다
    # Thanos Query에서 클러스터 필터링 시 사용됩니다
    externalLabels:
      cluster: cluster-02-edge
      region: edge
      environment: production

# ----------------------------------------------------------------------------
# Alertmanager 비활성화 (중앙 클러스터에서만 사용)
# ----------------------------------------------------------------------------
alertmanager:
  enabled: false

# ----------------------------------------------------------------------------
# Grafana 비활성화 (중앙 클러스터에서만 사용)
# ----------------------------------------------------------------------------
grafana:
  enabled: false

# ----------------------------------------------------------------------------
# Node Exporter (노드 메트릭 수집)
# ----------------------------------------------------------------------------
prometheus-node-exporter:
  enabled: true

  resources:
    requests:
      cpu: 50m
      memory: 30Mi
    limits:
      cpu: 100m
      memory: 50Mi

# ----------------------------------------------------------------------------
# Kube-State-Metrics (Kubernetes 리소스 메트릭)
# ----------------------------------------------------------------------------
kube-state-metrics:
  enabled: true

  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

# ----------------------------------------------------------------------------
# 기본 모니터링 타겟 활성화
# ----------------------------------------------------------------------------
kubeApiServer:
  enabled: true

kubelet:
  enabled: true

kubeControllerManager:
  enabled: true

coreDns:
  enabled: true

kubeEtcd:
  enabled: false  # 엣지에서는 etcd 모니터링 불필요할 수 있음

kubeScheduler:
  enabled: true

kubeProxy:
  enabled: true

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true
