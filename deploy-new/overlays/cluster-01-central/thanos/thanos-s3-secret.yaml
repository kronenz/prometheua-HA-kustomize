apiVersion: v1
kind: Secret
metadata:
  name: thanos-s3-config
  namespace: monitoring
type: Opaque
stringData:
  objstore.yml: |
    # ============================================================================
    # Thanos S3 Object Storage 설정
    # ============================================================================
    # MinIO 또는 AWS S3 호환 오브젝트 스토리지 설정
    #
    # 지원하는 스토리지:
    #   - MinIO (S3 호환)
    #   - AWS S3
    #   - Google Cloud Storage (GCS)
    #   - Azure Blob Storage
    #   - OpenStack Swift
    # ============================================================================

    type: S3
    config:
      # --------------------------------------------------------------------
      # 버킷 설정
      # --------------------------------------------------------------------
      # S3 버킷 이름: 메트릭 블록이 저장될 위치
      # 클러스터별로 별도 버킷 사용 권장
      bucket: "thanos-cluster-01"

      # --------------------------------------------------------------------
      # 엔드포인트 설정
      # --------------------------------------------------------------------
      # S3 API 엔드포인트
      #
      # HTTP (비보안):
      #   endpoint: "s3.minio.miribit.lab:80"
      #   insecure: true
      #
      # HTTPS (보안 - 권장):
      #   endpoint: "s3.minio.miribit.lab:443"
      #   insecure: false
      #
      # AWS S3 리전별 엔드포인트:
      #   - us-east-1: s3.amazonaws.com (기본)
      #   - ap-northeast-2: s3.ap-northeast-2.amazonaws.com (서울)
      #   - 기타 리전: s3.<region>.amazonaws.com
      endpoint: "s3.minio.miribit.lab:443"

      # --------------------------------------------------------------------
      # 인증 정보
      # --------------------------------------------------------------------
      # S3 Access Key (환경 변수로 관리 권장)
      # 프로덕션: Kubernetes Secret으로 별도 관리
      access_key: "Kl8u9VGxT4KA8TxlLEfO"

      # S3 Secret Key (환경 변수로 관리 권장)
      secret_key: "U9KVRsMZlHJtiToriOxXfl9uPAXqFjqAI1ZdRCOz"

      # --------------------------------------------------------------------
      # 보안 설정
      # --------------------------------------------------------------------
      # HTTP 사용 여부
      # true: HTTP 프로토콜 사용 (비보안)
      # false: HTTPS 프로토콜 사용 (보안)
      #
      # 프로덕션 환경: insecure: false (HTTPS 필수)
      # 개발 환경: insecure: true (테스트 용이)
      insecure: false

      # HTTP 클라이언트 설정
      http_config:
        # --------------------------------------------------------------------
        # TLS 인증서 검증
        # --------------------------------------------------------------------
        # TLS 인증서 검증 건너뛰기
        # true: 인증서 검증 안 함 (자체 서명 인증서 허용)
        # false: 인증서 검증 수행 (권장)
        #
        # 보안 권장사항:
        #   - 프로덕션: insecure_skip_verify: false
        #   - 자체 서명 인증서: CA 인증서 제공 (tls_config.ca_file)
        #   - 개발/테스트: insecure_skip_verify: true
        insecure_skip_verify: false

        # TLS 설정
        tls_config:
          # CA 인증서 파일 경로
          # S3 서버의 TLS 인증서를 검증하기 위한 CA 인증서
          #
          # 사용 시나리오:
          #   1. 자체 서명 인증서 (Self-signed)
          #   2. 프라이빗 CA로 발급된 인증서
          #   3. 내부 PKI 인프라 인증서
          #
          # 설정 방법:
          #   1. s3-tls-cert Secret에 CA 인증서 저장
          #   2. extraVolumes/volumeMounts로 컨테이너에 마운트
          #   3. 아래 경로 설정
          #
          # 마운트 경로: /etc/ssl/certs/s3-ca.crt
          # (values-thanos.yaml의 volumeMounts 설정 참조)
          ca_file: /etc/ssl/certs/s3-ca.crt

          # 클라이언트 인증서 (mTLS - 선택 사항)
          # S3가 클라이언트 인증을 요구하는 경우에만 사용
          # cert_file: /path/to/client-cert.pem
          # key_file: /path/to/client-key.pem
