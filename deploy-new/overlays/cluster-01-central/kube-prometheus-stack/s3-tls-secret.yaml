apiVersion: v1
kind: Secret
metadata:
  name: prometheus-s3-tls-cert
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: s3-tls
type: Opaque
data:
  # S3 엔드포인트의 TLS 인증서 (Base64 인코딩)
  #
  # ============================================================================
  # 생성 방법
  # ============================================================================
  #
  # 방법 1: OpenSSL로 S3 서버 인증서 다운로드 (권장)
  # ----------------------------------------------------------------------------
  # openssl s_client -showcerts -connect s3.minio.miribit.lab:443 </dev/null 2>/dev/null | \
  #   openssl x509 -outform PEM > /tmp/s3.crt
  #
  # cat /tmp/s3.crt | base64 -w 0
  #
  # 방법 2: kubectl로 직접 생성
  # ----------------------------------------------------------------------------
  # kubectl create secret generic prometheus-s3-tls-cert \
  #   --from-file=ca.crt=/tmp/s3.crt \
  #   -n monitoring
  #
  # 방법 3: 브라우저에서 인증서 다운로드
  # ----------------------------------------------------------------------------
  # 1. https://s3.minio.miribit.lab 접속
  # 2. 주소창 자물쇠 아이콘 → 인증서 보기
  # 3. PEM 형식으로 내보내기
  # 4. Base64 인코딩
  #
  # ============================================================================
  # 사용 목적
  # ============================================================================
  #
  # - Prometheus Thanos Sidecar: S3에 TSDB 블록 업로드
  # - Remote Write with TLS: HTTPS S3 엔드포인트 사용 시
  # - 자체 서명 인증서 또는 프라이빗 CA 인증서 신뢰
  #
  # ============================================================================
  # 배포 후 확인
  # ============================================================================
  #
  # # Secret 확인
  # kubectl get secret prometheus-s3-tls-cert -n monitoring
  #
  # # 내용 확인 (디코딩)
  # kubectl get secret prometheus-s3-tls-cert -n monitoring \
  #   -o jsonpath='{.data.ca\.crt}' | base64 -d
  #
  # ============================================================================

  ca.crt: ""  # Base64로 인코딩된 S3 CA 인증서를 여기에 입력
