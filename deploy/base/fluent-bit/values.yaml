# Fluent Bit Base Configuration
# NOTE: OpenSearch endpoint is configured per cluster in overlays

image:
  repository: fluent/fluent-bit
  tag: 3.2.2

# DaemonSet mode to collect logs from all nodes
kind: DaemonSet

# Resource configuration
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Service configuration
service:
  type: ClusterIP
  port: 2020

# Service Monitor for Prometheus
serviceMonitor:
  enabled: true
  namespace: monitoring
  interval: 30s

# Fluent Bit configuration
config:
  service: |
    [SERVICE]
        Daemon Off
        Flush 5
        Log_Level info
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On

  inputs: |
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri
        Tag kube.*
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On
        Refresh_Interval 10

    [INPUT]
        Name systemd
        Tag host.*
        Systemd_Filter _SYSTEMD_UNIT=kubelet.service
        Systemd_Filter _SYSTEMD_UNIT=docker.service
        Systemd_Filter _SYSTEMD_UNIT=containerd.service
        Read_From_Tail On

  filters: |
    [FILTER]
        Name kubernetes
        Match kube.*
        Kube_URL https://kubernetes.default.svc:443
        Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix kube.var.log.containers.
        Merge_Log On
        Keep_Log Off
        K8S-Logging.Parser On
        K8S-Logging.Exclude On
        Labels On
        Annotations Off

    [FILTER]
        Name nest
        Match kube.*
        Operation lift
        Nested_under kubernetes
        Add_prefix k8s_

    [FILTER]
        Name modify
        Match kube.*
        # Add cluster label (overridden in overlays)
        Add cluster unknown

    [FILTER]
        Name modify
        Match host.*
        # Add cluster label (overridden in overlays)
        Add cluster unknown

  outputs: |
    # OpenSearch output configuration
    # NOTE: Host is configured per cluster in overlays
    [OUTPUT]
        Name opensearch
        Match kube.*
        # Host opensearch-cluster-master.logging.svc.cluster.local
        # Port 9200
        Index logs
        Type _doc
        Logstash_Format On
        Logstash_Prefix logs-k8s
        Logstash_DateFormat %Y.%m.%d
        Time_Key @timestamp
        Generate_ID On
        Replace_Dots On
        Retry_Limit 5
        Suppress_Type_Name On
        tls Off

    [OUTPUT]
        Name opensearch
        Match host.*
        # Host opensearch-cluster-master.logging.svc.cluster.local
        # Port 9200
        Index logs
        Type _doc
        Logstash_Format On
        Logstash_Prefix logs-host
        Logstash_DateFormat %Y.%m.%d
        Time_Key @timestamp
        Generate_ID On
        Replace_Dots On
        Retry_Limit 5
        Suppress_Type_Name On
        tls Off

  customParsers: |
    [PARSER]
        Name docker
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
        Name containerd
        Format regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

# Volume mounts for log collection
volumeMounts:
  - name: varlog
    mountPath: /var/log
    readOnly: true
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true

daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers

# Tolerations to run on all nodes including master
tolerations:
  - operator: Exists
    effect: NoSchedule

# Security context
securityContext:
  privileged: false
  capabilities:
    drop:
      - ALL

# Pod security context
podSecurityContext:
  runAsUser: 0  # Required for reading log files
