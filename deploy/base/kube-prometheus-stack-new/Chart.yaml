# ============================================================================
# kube-prometheus-stack Helm Chart 정의
# ============================================================================
#
# 목적:
#   - Helm Chart 메타데이터 정의
#   - 의존성 Chart 관리
#   - Kustomize에서 Helm Chart를 사용하기 위한 설정
#
# ============================================================================

# Chart API 버전
# - v2: Helm 3 이상
apiVersion: v2

# Chart 이름
# - Kustomize helmCharts에서 참조하는 이름
name: kube-prometheus-stack

# Chart 설명
description: |
  kube-prometheus-stack을 사용한 Prometheus + Thanos 멀티클러스터 모니터링

  포함 컴포넌트:
  - Prometheus Operator: ServiceMonitor 자동 감지
  - Prometheus: 메트릭 수집 (Full/Agent 모드)
  - Alertmanager: Alert 관리
  - Grafana: 시각화 대시보드
  - node-exporter: 노드 시스템 메트릭
  - kube-state-metrics: Kubernetes 리소스 메트릭

# Chart 타입
# - application: 애플리케이션 Chart (기본값)
# - library: 라이브러리 Chart (다른 Chart에서 사용)
type: application

# Chart 버전
# - SemVer 형식 (https://semver.org/)
# - 이 Chart 파일의 버전 (업스트림 Chart와 다를 수 있음)
version: 1.0.0

# 애플리케이션 버전
# - 실제 배포되는 애플리케이션의 버전
# - kube-prometheus-stack Helm Chart 버전
appVersion: "78.2.1"

# 의존성 Chart
# - kube-prometheus-stack을 Helm Repository에서 가져옴
dependencies:
  - name: kube-prometheus-stack
    # Chart 버전
    # - 78.2.1: 2024년 최신 안정 버전
    # - 변경 시 values.yaml 호환성 확인 필요
    version: "78.2.1"

    # Helm Repository URL
    # - prometheus-community 공식 Repository
    repository: https://prometheus-community.github.io/helm-charts

    # 조건부 활성화
    # - values.yaml의 kube-prometheus-stack.enabled 값에 따라 활성화
    # - 기본적으로 항상 활성화
    condition: kube-prometheus-stack.enabled

# 유지 관리자 정보
maintainers:
  - name: Thanos Multi-Cluster Team
    email: admin@miribit.lab

# Keywords
# - Chart 검색용
keywords:
  - prometheus
  - thanos
  - monitoring
  - kubernetes
  - multi-cluster
  - observability

# 홈페이지
home: https://github.com/kronenz/prometheua-HA-kustomize

# 소스 코드
sources:
  - https://github.com/prometheus-operator/kube-prometheus
  - https://github.com/thanos-io/thanos

# ============================================================================
# 사용 방법
# ============================================================================
#
# 1. Chart 의존성 업데이트:
#    helm dependency update
#    → charts/ 디렉토리에 kube-prometheus-stack Chart 다운로드
#
# 2. Chart 확인:
#    helm dependency list
#
# 3. Chart 설치 (직접 Helm 사용 시):
#    helm install kube-prometheus-stack . \
#      -f values.yaml \
#      -n monitoring --create-namespace
#
# 4. Kustomize + Helm (ArgoCD 사용 시):
#    kustomization.yaml에서 helmCharts 사용
#    → Kustomize가 자동으로 Helm Chart 렌더링
#
# ============================================================================
# 버전 관리
# ============================================================================
#
# Chart 버전 변경 시:
#   1. dependencies.version 업데이트
#   2. helm dependency update 실행
#   3. values.yaml 호환성 확인
#   4. 테스트 클러스터에서 검증
#   5. 프로덕션 배포
#
# 주요 버전:
#   - 78.2.1: 현재 사용 중 (2024-10)
#   - 77.x: 이전 안정 버전
#   - 79.x: 다음 메이저 버전 (Breaking Changes 가능)
#
# ============================================================================
